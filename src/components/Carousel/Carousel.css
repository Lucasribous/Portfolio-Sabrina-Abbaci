.carousel-wrapper {
  position: relative;
  display: block;
  width: 75%;
  max-width: 1100px;
  margin: 0 auto;
}

.carousel-viewport {
  display: flex;
  gap: 1rem;                        /* espace entre les slides */
  overflow-x: auto;                 /* scroll horizontal */
  overflow-y: hidden;
  scroll-snap-type: x mandatory;    /* snap aux slides */
  -webkit-overflow-scrolling: touch;/* inertial scrolling iOS */
  scroll-behavior: smooth;          /* smooth pour scrollBy / scrollTo */
  touch-action: pan-y;              /* laisse la page scroller verticalement, permet swipe horizontal */
  -ms-overflow-style: none;         /* hide old IE scrollbar if desired */
  will-change: scroll-position;     /* hint pour perf */
  user-select: none;                /* évite sélection lors du drag avec la souris */
}

/* chaque item doit s'aligner sur le snap (si nécessaire) */
.carousel-viewport .carousel-item {
  scroll-snap-align: start;
  flex: 0 0 auto;  /* empêche les slides de s'étirer */
}

/* scrollbar stylée visible sur desktop */
.carousel-viewport::-webkit-scrollbar {
  height: 10px;
}
.carousel-viewport::-webkit-scrollbar-track {
  background: transparent;
}
.carousel-viewport::-webkit-scrollbar-thumb {
  background: rgba(241,159,211,0.9); /* rose */
  border-radius: 8px;
  border: 2px solid transparent;
  background-clip: padding-box;
}
@media (max-width: 640px) {
  /* sur mobile on peut masquer la barre si on préfère */
  .carousel-viewport::-webkit-scrollbar { display: none; height: 0; }
  .carousel-viewport { scrollbar-width: none; }
}

/* curseur pour desktop drag */
.carousel-viewport { cursor: grab; }
.carousel-viewport.is-dragging { cursor: grabbing; }

.carousel-item {
  flex: 0 0 100%;
  min-width: 100%;
  box-sizing: border-box;
  position: relative;
  scroll-snap-align: center;
  scroll-snap-stop: always;
  display: flex;
  justify-content: center;
  align-items: center;
  background: transparent;
  border-radius: 3px;
  overflow: hidden; /* évite que l'image déborde aux coins arrondis */
}

.carousel-image {
  width: 100%;
  height: 100%;
  display: block;
  object-fit: cover; /* adapte l'image à la boîte sans déformer */
  border-radius: inherit; /* hérite de la valeur du parent */
  pointer-events: none;
  user-select: none;
  border-radius: 3px;
}

.carousel-indicators {
  margin-top: 12px;
  display: flex;
  justify-content: center;
  gap: 12px;
  align-items: center;
}

.carousel-dot {
  width: 10px;
  height: 10px;
  background-color: #f19fd3; /* rose demandé */
  border-radius: 50%;
  cursor: pointer;
  transition: transform 160ms ease, opacity 160ms ease;
  opacity: 0.6;
  border: none;
  padding: 0;
  margin-bottom: 10%; /* espace sous le carousel */
  margin-top: 0.3rem;
}

.carousel-dot.active {
  opacity: 1;
  transform: scale(1.25);
}

/* Décor contrôlable par variables pour pouvoir ajuster sans recompiler tout le fichier */
.carousel-decor {
  position: absolute;
  pointer-events: none;
  user-select: none;
  display: block;
  width: clamp(80px, 16vw, 260px);
  height: auto;
  will-change: transform, opacity;
  /* variables pour offset (valeurs par défaut centrées sur le coin) */
  --decor-offset-x: -50%;
  --decor-offset-y: -50%;
  transform: translate(var(--decor-offset-x), var(--decor-offset-y));
}

/* on cible le parent .relative pour augmenter la spécificité si besoin */
.relative > .carousel-decor.carousel-decor--left {
  top: 0;
  left: 0;
  z-index: 5; /* derrière le carrousel */
  /* valeurs par défaut (centre de l'image sur coin haut-gauche) */
  --decor-offset-x: -50%;
  --decor-offset-y: -50%;
}

/* right : centre de l'image placé exactement sur le coin bas-droit */
.relative > .carousel-decor.carousel-decor--right {
  right: 0;
  bottom: 0;
  z-index: 20; /* au-dessus du carrousel */
  /* valeurs par défaut (centre sur coin bas-droit) */
  --decor-offset-x: 50%;
  --decor-offset-y: 50%;
}

/* petits écrans : réduire les décorations si nécessaire */
@media (max-width: 640px) {
  .carousel-decor { width: clamp(56px, 24vw, 180px); }
  .relative > .carousel-decor.carousel-decor--left  { --decor-offset-x: -40%; --decor-offset-y: -40%; }
  .relative > .carousel-decor.carousel-decor--right { --decor-offset-x: 40%;  --decor-offset-y: 40%;  }
}