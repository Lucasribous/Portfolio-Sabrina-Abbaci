.carousel-wrapper {
  position: relative;
  display: block;
  width: 75%;
  max-width: 1100px;
  margin: 0 auto;
}

.carousel-viewport {
  display: flex;
  gap: 1rem;
  flex-wrap: nowrap;
  align-items: stretch;
  width: 100%;
  overflow-x: auto;
  overflow-y: hidden;
  scroll-snap-type: x mandatory;
  -webkit-overflow-scrolling: touch;
  scroll-behavior: smooth;
  /* allow browser to handle touch gestures (don't block horizontal swipe) */
  touch-action: auto;
  will-change: scroll-position;
  user-select: none;
}

/* ensure items don't stretch images */
.carousel-viewport .carousel-item {
  scroll-snap-align: start;
  flex: 0 0 auto;
  height: auto; /* do not force item height */
}

/* do NOT force image sizes here; keep natural / existing CSS behavior */
/* only ensure rounded corners if wanted (keeps original sizing) */
.carousel-item {
  border-radius: 3px;
  overflow: hidden;
}
.carousel-image {
  display: block;
  width: 100%;
  height: auto;        /* keep aspect ratio; do not force height */
  object-fit: cover;
}

/* show grab cursor only for pointer: fine (desktop) */
@media (pointer: fine) {
  .carousel-viewport { cursor: grab; }
  .carousel-viewport.is-dragging { cursor: grabbing; }
}

/* scrollbar styling for desktop for discoverability */
@media (pointer: fine) {
  .carousel-viewport::-webkit-scrollbar { height: 10px; }
  .carousel-viewport::-webkit-scrollbar-track { background: transparent; }
  .carousel-viewport::-webkit-scrollbar-thumb {
    background: rgba(241,159,211,0.9);
    border-radius: 8px;
    border: 2px solid transparent;
    background-clip: padding-box;
  }
  .carousel-viewport { scrollbar-width: thin; scrollbar-color: rgba(241,159,211,0.9) transparent; }
}

/* minimal mobile tweak: hide native scrollbar if preferred (won't affect touch) */
@media (max-width: 640px) {
  .carousel-viewport::-webkit-scrollbar { display: none; height: 0; }
  .carousel-viewport { scrollbar-width: none; }
}

.carousel-indicators {
  margin-top: 12px;
  display: flex;
  justify-content: center;
  gap: 12px;
  align-items: center;
}

.carousel-dot {
  width: 10px;
  height: 10px;
  background-color: #f19fd3; /* rose demandé */
  border-radius: 50%;
  cursor: pointer;
  transition: transform 160ms ease, opacity 160ms ease;
  opacity: 0.6;
  border: none;
  padding: 0;
  margin-bottom: 10%; /* espace sous le carousel */
  margin-top: 0.3rem;
}

.carousel-dot.active {
  opacity: 1;
  transform: scale(1.25);
}

/* Décor contrôlable par variables pour pouvoir ajuster sans recompiler tout le fichier */
.carousel-decor {
  position: absolute;
  pointer-events: none;
  user-select: none;
  display: block;
  width: clamp(80px, 16vw, 260px);
  height: auto;
  will-change: transform, opacity;
  /* variables pour offset (valeurs par défaut centrées sur le coin) */
  --decor-offset-x: -50%;
  --decor-offset-y: -50%;
  transform: translate(var(--decor-offset-x), var(--decor-offset-y));
}

/* on cible le parent .relative pour augmenter la spécificité si besoin */
.relative > .carousel-decor.carousel-decor--left {
  top: 0;
  left: 0;
  z-index: 5; /* derrière le carrousel */
  /* valeurs par défaut (centre de l'image sur coin haut-gauche) */
  --decor-offset-x: -50%;
  --decor-offset-y: -50%;
}

/* right : centre de l'image placé exactement sur le coin bas-droit */
.relative > .carousel-decor.carousel-decor--right {
  right: 0;
  bottom: 0;
  z-index: 20; /* au-dessus du carrousel */
  /* valeurs par défaut (centre sur coin bas-droit) */
  --decor-offset-x: 50%;
  --decor-offset-y: 50%;
}

/* petits écrans : réduire les décorations si nécessaire */
@media (max-width: 640px) {
  .carousel-decor { width: clamp(56px, 24vw, 180px); }
  .relative > .carousel-decor.carousel-decor--left  { --decor-offset-x: -40%; --decor-offset-y: -40%; }
  .relative > .carousel-decor.carousel-decor--right { --decor-offset-x: 40%;  --decor-offset-y: 40%;  }
}